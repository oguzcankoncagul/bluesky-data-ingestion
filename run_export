#!/usr/bin/env python3

import glob
import os
import sys

import duckdb

def main():
    # 1. Connect in READ-ONLY mode
    try:
        con = duckdb.connect("dev.duckdb", read_only=True)
    except Exception as e:
        print(f"Error opening dev.duckdb in read-only mode: {e}")
        sys.exit(1)

    # 2. Find all compiled SQL files from dbt
    sql_files = glob.glob("dbt/target/compiled/dbt_project/analyses/*.sql")
    if not sql_files:
        print("No compiled analysis SQL files found.")
        sys.exit(1)

    # 3. Create metrics/ directory if missing
    os.makedirs("metrics", exist_ok=True)

    # 4. For each SQL file, COPY the query results to a CSV
    for sql_file in sql_files:
        base_name = os.path.splitext(os.path.basename(sql_file))[0]
        output_file = f"metrics/{base_name}.csv"

        # Read the compiled SQL query
        with open(sql_file, "r", encoding="utf-8") as f:
            compiled_sql = f.read().strip()

        # COPY the query results to CSV
        copy_stmt = f"""
            COPY (
                {compiled_sql}
            ) 
            TO '{output_file}' 
            (HEADER, DELIMITER ',');
        """

        try:
            con.execute(copy_stmt)
            print(f"Exported {sql_file} -> {output_file}")
        except Exception as e:
            print(f"Error exporting {sql_file}: {e}")
            # Decide whether to exit or continue
            sys.exit(1)

    # 5. Close the connection
    con.close()

if __name__ == "__main__":
    main()
